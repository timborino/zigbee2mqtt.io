"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[94059],{21642:(e,t,o)=>{o.r(t),o.d(t,{comp:()=>a,data:()=>d});var u=o(60362);const s={},a=(0,o(60654).A)(s,[["render",function(e,t){const o=(0,u.g2)("RouteLink");return(0,u.uX)(),(0,u.CE)("div",null,[t[8]||(t[8]=(0,u.Lk)("h1",{id:"lupus-12031",tabindex:"-1"},[(0,u.Lk)("a",{class:"header-anchor",href:"#lupus-12031"},[(0,u.Lk)("span",null,"Lupus 12031")])],-1)),(0,u.Lk)("table",null,[t[6]||(t[6]=(0,u.Lk)("thead",null,[(0,u.Lk)("tr",null,[(0,u.Lk)("th"),(0,u.Lk)("th")])],-1)),(0,u.Lk)("tbody",null,[t[2]||(t[2]=(0,u.Lk)("tr",null,[(0,u.Lk)("td",null,"Model"),(0,u.Lk)("td",null,"12031")],-1)),(0,u.Lk)("tr",null,[t[1]||(t[1]=(0,u.Lk)("td",null,"Vendor",-1)),(0,u.Lk)("td",null,[(0,u.bF)(o,{to:"/supported-devices/#v=Lupus"},{default:(0,u.k6)(()=>[...t[0]||(t[0]=[(0,u.eW)("Lupus",-1)])]),_:1})])]),t[3]||(t[3]=(0,u.Lk)("tr",null,[(0,u.Lk)("td",null,"Description"),(0,u.Lk)("td",null,"Roller shutter")],-1)),t[4]||(t[4]=(0,u.Lk)("tr",null,[(0,u.Lk)("td",null,"Exposes"),(0,u.Lk)("td",null,"cover (state, position)")],-1)),t[5]||(t[5]=(0,u.Lk)("tr",null,[(0,u.Lk)("td",null,"Picture"),(0,u.Lk)("td",null,[(0,u.Lk)("img",{src:"https://www.zigbee2mqtt.io/images/devices/12031.png",alt:"Lupus 12031"})])],-1))])]),t[9]||(t[9]=(0,u.Lk)("h2",{id:"options",tabindex:"-1"},[(0,u.Lk)("a",{class:"header-anchor",href:"#options"},[(0,u.Lk)("span",null,"Options")])],-1)),(0,u.Lk)("p",null,[(0,u.Lk)("em",null,[(0,u.bF)(o,{to:"/guide/configuration/devices-groups.html#specific-device-options"},{default:(0,u.k6)(()=>[...t[7]||(t[7]=[(0,u.eW)("How to use device type specific configuration",-1)])]),_:1})])]),t[10]||(t[10]=(0,u.Fv)('<ul><li><code>invert_cover</code>: Inverts the cover position, false: open=100,close=0, true: open=0,close=100 (default false). The value must be <code>true</code> or <code>false</code></li></ul><h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes"><span>Exposes</span></a></h2><h3 id="cover" tabindex="-1"><a class="header-anchor" href="#cover"><span>Cover</span></a></h3><p>The current state of this cover is in the published state under the <code>state</code> property (value is <code>OPEN</code> or <code>CLOSE</code>). To control this cover publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;state&quot;: &quot;OPEN&quot;}</code>, <code>{&quot;state&quot;: &quot;CLOSE&quot;}</code>, <code>{&quot;state&quot;: &quot;STOP&quot;}</code>. To read the current state of this cover publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;state&quot;: &quot;&quot;}</code>. To change the position publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;position&quot;: VALUE}</code> where <code>VALUE</code> is a number between <code>0</code> and <code>100</code>.</p>',4))])}]]),d=JSON.parse('{"path":"/devices/12031.html","title":"Lupus 12031 control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"Lupus 12031 control via MQTT","description":"Integrate your Lupus 12031 via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2019-07-22T20:08:17.000Z"},"git":{"updatedTime":1762017248000,"contributors":[{"name":"bouwew","username":"bouwew","email":"11290930+bouwew@users.noreply.github.com","commits":1,"url":"https://github.com/bouwew"}],"changelog":[{"hash":"1f93f211eb97b21686c25d4df8d6e022a60b910d","time":1762017248000,"email":"11290930+bouwew@users.noreply.github.com","author":"Bouwe Westerdijk","message":"Add picture for Plugwise Emma Pro (#4373)"}]},"filePathRelative":"devices/12031.md"}')}}]);